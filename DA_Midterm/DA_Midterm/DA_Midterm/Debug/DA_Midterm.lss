
DA_Midterm.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ca  00800100  0000094e  000009e2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000094e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000020  008001ca  008001ca  00000aac  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000aac  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000b08  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000b44  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009a8  00000000  00000000  00000b84  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000737  00000000  00000000  0000152c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003f7  00000000  00000000  00001c63  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e0  00000000  00000000  0000205c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003de  00000000  00000000  0000213c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000302  00000000  00000000  0000251a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  0000281c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e4       	ldi	r30, 0x4E	; 78
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 3c       	cpi	r26, 0xCA	; 202
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	aa ec       	ldi	r26, 0xCA	; 202
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 3e       	cpi	r26, 0xEA	; 234
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 bc 00 	call	0x178	; 0x178 <main>
  9e:	0c 94 a5 04 	jmp	0x94a	; 0x94a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <adc_init>:
}

void adc_init(void)
{
	/** Setup and enable ADC **/
	ADMUX = 0;				//select ADC0 Pin as input
  a6:	ec e7       	ldi	r30, 0x7C	; 124
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	10 82       	st	Z, r1
	ADMUX = (0<<REFS1)| 	//Reference Selection Bits
  ac:	80 e6       	ldi	r24, 0x60	; 96
  ae:	80 83       	st	Z, r24
	(1<<REFS0)| 			//AVcc - external cap at AREF
	(1<<ADLAR); 			//ADC left Adjust Result
	
	ADCSRA = (1<<ADEN)| 	//ADC ENable
  b0:	86 ee       	ldi	r24, 0xE6	; 230
  b2:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
  b6:	08 95       	ret

000000b8 <read_adc>:

/* READ ADC PINS*/
void read_adc(void)
{
	unsigned char i = 4;					//set for 4 ADC reads
	adc_temp = 0;							//initialize temp to 0
  b8:	10 92 e9 01 	sts	0x01E9, r1	; 0x8001e9 <adc_temp+0x1>
  bc:	10 92 e8 01 	sts	0x01E8, r1	; 0x8001e8 <adc_temp>
  c0:	44 e0       	ldi	r20, 0x04	; 4
	while (i--)
	{
		ADCSRA |= (1<<ADSC);				//start the conversion
  c2:	ea e7       	ldi	r30, 0x7A	; 122
  c4:	f0 e0       	ldi	r31, 0x00	; 0
		while((ADCSRA & (1<<ADIF)) == 0);	//wait for conversion to finish                    
		adc_temp += ADCH*2;					//get temp value
  c6:	a9 e7       	ldi	r26, 0x79	; 121
  c8:	b0 e0       	ldi	r27, 0x00	; 0
{
	unsigned char i = 4;					//set for 4 ADC reads
	adc_temp = 0;							//initialize temp to 0
	while (i--)
	{
		ADCSRA |= (1<<ADSC);				//start the conversion
  ca:	80 81       	ld	r24, Z
  cc:	80 64       	ori	r24, 0x40	; 64
  ce:	80 83       	st	Z, r24
		while((ADCSRA & (1<<ADIF)) == 0);	//wait for conversion to finish                    
  d0:	80 81       	ld	r24, Z
  d2:	84 ff       	sbrs	r24, 4
  d4:	fd cf       	rjmp	.-6      	; 0xd0 <read_adc+0x18>
		adc_temp += ADCH*2;					//get temp value
  d6:	9c 91       	ld	r25, X
  d8:	20 91 e8 01 	lds	r18, 0x01E8	; 0x8001e8 <adc_temp>
  dc:	30 91 e9 01 	lds	r19, 0x01E9	; 0x8001e9 <adc_temp+0x1>
  e0:	89 2f       	mov	r24, r25
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	88 0f       	add	r24, r24
  e6:	99 1f       	adc	r25, r25
  e8:	82 0f       	add	r24, r18
  ea:	93 1f       	adc	r25, r19
  ec:	90 93 e9 01 	sts	0x01E9, r25	; 0x8001e9 <adc_temp+0x1>
  f0:	80 93 e8 01 	sts	0x01E8, r24	; 0x8001e8 <adc_temp>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  f4:	2f e7       	ldi	r18, 0x7F	; 127
  f6:	88 e3       	ldi	r24, 0x38	; 56
  f8:	91 e0       	ldi	r25, 0x01	; 1
  fa:	21 50       	subi	r18, 0x01	; 1
  fc:	80 40       	sbci	r24, 0x00	; 0
  fe:	90 40       	sbci	r25, 0x00	; 0
 100:	e1 f7       	brne	.-8      	; 0xfa <read_adc+0x42>
 102:	00 c0       	rjmp	.+0      	; 0x104 <read_adc+0x4c>
 104:	00 00       	nop
 106:	41 50       	subi	r20, 0x01	; 1
/* READ ADC PINS*/
void read_adc(void)
{
	unsigned char i = 4;					//set for 4 ADC reads
	adc_temp = 0;							//initialize temp to 0
	while (i--)
 108:	01 f7       	brne	.-64     	; 0xca <read_adc+0x12>
		ADCSRA |= (1<<ADSC);				//start the conversion
		while((ADCSRA & (1<<ADIF)) == 0);	//wait for conversion to finish                    
		adc_temp += ADCH*2;					//get temp value
		_delay_ms(50);						//wait a bit
	}
	adc_temp = adc_temp / 4; 				// Average a few samples
 10a:	80 91 e8 01 	lds	r24, 0x01E8	; 0x8001e8 <adc_temp>
 10e:	90 91 e9 01 	lds	r25, 0x01E9	; 0x8001e9 <adc_temp+0x1>
 112:	96 95       	lsr	r25
 114:	87 95       	ror	r24
 116:	96 95       	lsr	r25
 118:	87 95       	ror	r24
 11a:	90 93 e9 01 	sts	0x01E9, r25	; 0x8001e9 <adc_temp+0x1>
 11e:	80 93 e8 01 	sts	0x01E8, r24	; 0x8001e8 <adc_temp>
 122:	08 95       	ret

00000124 <USART_init>:
}

/* INIT USART (RS-232) */
void USART_init( unsigned int ubrr )
{
	UBRR0H = (unsigned char)(ubrr>>8);			//set baud rate
 124:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned char)ubrr;
 128:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B = (1 << TXEN0) | (1 <<RXEN0); 		// Enable receiver, transmitter
 12c:	88 e1       	ldi	r24, 0x18	; 24
 12e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = (1 << UCSZ00) | (1 << UCSZ01); 	//asynchronous 8-bit data 1 stop bit
 132:	86 e0       	ldi	r24, 0x06	; 6
 134:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 138:	08 95       	ret

0000013a <USART_tx_string>:
}

/* SEND A STRING TO THE RS-232*/
void USART_tx_string( char *data )
{
 13a:	cf 93       	push	r28
 13c:	df 93       	push	r29
	while ((*data != '\0'))					
 13e:	fc 01       	movw	r30, r24
 140:	20 81       	ld	r18, Z
 142:	22 23       	and	r18, r18
 144:	b1 f0       	breq	.+44     	; 0x172 <USART_tx_string+0x38>
 146:	dc 01       	movw	r26, r24
 148:	11 96       	adiw	r26, 0x01	; 1
	{
		while (!(UCSR0A & (1 <<UDRE0)));	//wait for the transmit buffer to empty
 14a:	e0 ec       	ldi	r30, 0xC0	; 192
 14c:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0 = *data;						//put the data into the empty buffer, which sends the data
 14e:	c6 ec       	ldi	r28, 0xC6	; 198
 150:	d0 e0       	ldi	r29, 0x00	; 0
/* SEND A STRING TO THE RS-232*/
void USART_tx_string( char *data )
{
	while ((*data != '\0'))					
	{
		while (!(UCSR0A & (1 <<UDRE0)));	//wait for the transmit buffer to empty
 152:	90 81       	ld	r25, Z
 154:	95 ff       	sbrs	r25, 5
 156:	fd cf       	rjmp	.-6      	; 0x152 <USART_tx_string+0x18>
		UDR0 = *data;						//put the data into the empty buffer, which sends the data
 158:	28 83       	st	Y, r18
 15a:	2f e3       	ldi	r18, 0x3F	; 63
 15c:	8d e0       	ldi	r24, 0x0D	; 13
 15e:	93 e0       	ldi	r25, 0x03	; 3
 160:	21 50       	subi	r18, 0x01	; 1
 162:	80 40       	sbci	r24, 0x00	; 0
 164:	90 40       	sbci	r25, 0x00	; 0
 166:	e1 f7       	brne	.-8      	; 0x160 <USART_tx_string+0x26>
 168:	00 c0       	rjmp	.+0      	; 0x16a <USART_tx_string+0x30>
 16a:	00 00       	nop
}

/* SEND A STRING TO THE RS-232*/
void USART_tx_string( char *data )
{
	while ((*data != '\0'))					
 16c:	2d 91       	ld	r18, X+
 16e:	21 11       	cpse	r18, r1
 170:	f0 cf       	rjmp	.-32     	; 0x152 <USART_tx_string+0x18>
		while (!(UCSR0A & (1 <<UDRE0)));	//wait for the transmit buffer to empty
		UDR0 = *data;						//put the data into the empty buffer, which sends the data
		_delay_ms(125); 					// wait a bit
		data++;
	}
}
 172:	df 91       	pop	r29
 174:	cf 91       	pop	r28
 176:	08 95       	ret

00000178 <main>:
char outs[30];


int main(void)
{
	adc_init(); 						//Initialize the ADC (Analog / Digital Converter)
 178:	0e 94 53 00 	call	0xa6	; 0xa6 <adc_init>
	USART_init(UBRR_115200); 			//Initialize the USART (RS232 interface)
 17c:	83 e0       	ldi	r24, 0x03	; 3
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	0e 94 92 00 	call	0x124	; 0x124 <USART_init>
 184:	2f e3       	ldi	r18, 0x3F	; 63
 186:	3d e0       	ldi	r19, 0x0D	; 13
 188:	83 e0       	ldi	r24, 0x03	; 3
 18a:	21 50       	subi	r18, 0x01	; 1
 18c:	30 40       	sbci	r19, 0x00	; 0
 18e:	80 40       	sbci	r24, 0x00	; 0
 190:	e1 f7       	brne	.-8      	; 0x18a <main+0x12>
 192:	00 c0       	rjmp	.+0      	; 0x194 <main+0x1c>
 194:	00 00       	nop
	_delay_ms(125); 					//wait a bit
	snprintf(outs,sizeof(outs),"AT\r\n");
 196:	ca ec       	ldi	r28, 0xCA	; 202
 198:	d1 e0       	ldi	r29, 0x01	; 1
 19a:	85 e0       	ldi	r24, 0x05	; 5
 19c:	e0 e0       	ldi	r30, 0x00	; 0
 19e:	f1 e0       	ldi	r31, 0x01	; 1
 1a0:	de 01       	movw	r26, r28
 1a2:	01 90       	ld	r0, Z+
 1a4:	0d 92       	st	X+, r0
 1a6:	8a 95       	dec	r24
 1a8:	e1 f7       	brne	.-8      	; 0x1a2 <main+0x2a>
	USART_tx_string(outs);
 1aa:	ce 01       	movw	r24, r28
 1ac:	0e 94 9d 00 	call	0x13a	; 0x13a <USART_tx_string>
 1b0:	9f ef       	ldi	r25, 0xFF	; 255
 1b2:	23 ed       	ldi	r18, 0xD3	; 211
 1b4:	30 e3       	ldi	r19, 0x30	; 48
 1b6:	91 50       	subi	r25, 0x01	; 1
 1b8:	20 40       	sbci	r18, 0x00	; 0
 1ba:	30 40       	sbci	r19, 0x00	; 0
 1bc:	e1 f7       	brne	.-8      	; 0x1b6 <main+0x3e>
 1be:	00 c0       	rjmp	.+0      	; 0x1c0 <main+0x48>
 1c0:	00 00       	nop
	_delay_ms(2000);  
	snprintf(outs,sizeof(outs),"AT+CWMODE=3\r\n");  //wifi mode
 1c2:	8e e0       	ldi	r24, 0x0E	; 14
 1c4:	e5 e0       	ldi	r30, 0x05	; 5
 1c6:	f1 e0       	ldi	r31, 0x01	; 1
 1c8:	de 01       	movw	r26, r28
 1ca:	01 90       	ld	r0, Z+
 1cc:	0d 92       	st	X+, r0
 1ce:	8a 95       	dec	r24
 1d0:	e1 f7       	brne	.-8      	; 0x1ca <main+0x52>
	USART_tx_string(outs);
 1d2:	ce 01       	movw	r24, r28
 1d4:	0e 94 9d 00 	call	0x13a	; 0x13a <USART_tx_string>
 1d8:	8f ef       	ldi	r24, 0xFF	; 255
 1da:	93 ed       	ldi	r25, 0xD3	; 211
 1dc:	20 e3       	ldi	r18, 0x30	; 48
 1de:	81 50       	subi	r24, 0x01	; 1
 1e0:	90 40       	sbci	r25, 0x00	; 0
 1e2:	20 40       	sbci	r18, 0x00	; 0
 1e4:	e1 f7       	brne	.-8      	; 0x1de <main+0x66>
 1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <main+0x70>
 1e8:	00 00       	nop
	_delay_ms(2000);
	snprintf(outs,sizeof(outs),"AT+CIPMUX=0\r\n");	//single connection
 1ea:	8e e0       	ldi	r24, 0x0E	; 14
 1ec:	e3 e1       	ldi	r30, 0x13	; 19
 1ee:	f1 e0       	ldi	r31, 0x01	; 1
 1f0:	de 01       	movw	r26, r28
 1f2:	01 90       	ld	r0, Z+
 1f4:	0d 92       	st	X+, r0
 1f6:	8a 95       	dec	r24
 1f8:	e1 f7       	brne	.-8      	; 0x1f2 <main+0x7a>
	USART_tx_string(outs);
 1fa:	ce 01       	movw	r24, r28
 1fc:	0e 94 9d 00 	call	0x13a	; 0x13a <USART_tx_string>
 200:	3f ef       	ldi	r19, 0xFF	; 255
 202:	83 ed       	ldi	r24, 0xD3	; 211
 204:	90 e3       	ldi	r25, 0x30	; 48
 206:	31 50       	subi	r19, 0x01	; 1
 208:	80 40       	sbci	r24, 0x00	; 0
 20a:	90 40       	sbci	r25, 0x00	; 0
 20c:	e1 f7       	brne	.-8      	; 0x206 <main+0x8e>
 20e:	00 c0       	rjmp	.+0      	; 0x210 <main+0x98>
 210:	00 00       	nop
	_delay_ms(2000);
	snprintf(outs,sizeof(outs),"AT+CIPMODE=0\r\n");	//normal mode
 212:	8f e0       	ldi	r24, 0x0F	; 15
 214:	e1 e2       	ldi	r30, 0x21	; 33
 216:	f1 e0       	ldi	r31, 0x01	; 1
 218:	de 01       	movw	r26, r28
 21a:	01 90       	ld	r0, Z+
 21c:	0d 92       	st	X+, r0
 21e:	8a 95       	dec	r24
 220:	e1 f7       	brne	.-8      	; 0x21a <main+0xa2>
	USART_tx_string(outs);
 222:	ce 01       	movw	r24, r28
 224:	0e 94 9d 00 	call	0x13a	; 0x13a <USART_tx_string>
 228:	2f ef       	ldi	r18, 0xFF	; 255
 22a:	33 ed       	ldi	r19, 0xD3	; 211
 22c:	80 e3       	ldi	r24, 0x30	; 48
 22e:	21 50       	subi	r18, 0x01	; 1
 230:	30 40       	sbci	r19, 0x00	; 0
 232:	80 40       	sbci	r24, 0x00	; 0
 234:	e1 f7       	brne	.-8      	; 0x22e <main+0xb6>
 236:	00 c0       	rjmp	.+0      	; 0x238 <main+0xc0>
 238:	00 00       	nop
	_delay_ms(2000);
	snprintf(outs,sizeof(outs),"AT+CWJAP=\"%s\",\"%s\"\r\n", SSID, Password);		//connect to wifi network
 23a:	80 e3       	ldi	r24, 0x30	; 48
 23c:	91 e0       	ldi	r25, 0x01	; 1
 23e:	9f 93       	push	r25
 240:	8f 93       	push	r24
 242:	8a e3       	ldi	r24, 0x3A	; 58
 244:	91 e0       	ldi	r25, 0x01	; 1
 246:	9f 93       	push	r25
 248:	8f 93       	push	r24
 24a:	82 e4       	ldi	r24, 0x42	; 66
 24c:	91 e0       	ldi	r25, 0x01	; 1
 24e:	9f 93       	push	r25
 250:	8f 93       	push	r24
 252:	1f 92       	push	r1
 254:	1e e1       	ldi	r17, 0x1E	; 30
 256:	1f 93       	push	r17
 258:	df 93       	push	r29
 25a:	cf 93       	push	r28
 25c:	0e 94 ad 01 	call	0x35a	; 0x35a <snprintf>
	USART_tx_string(outs);
 260:	ce 01       	movw	r24, r28
 262:	0e 94 9d 00 	call	0x13a	; 0x13a <USART_tx_string>
 266:	3f ef       	ldi	r19, 0xFF	; 255
 268:	83 ed       	ldi	r24, 0xD3	; 211
 26a:	90 e3       	ldi	r25, 0x30	; 48
 26c:	31 50       	subi	r19, 0x01	; 1
 26e:	80 40       	sbci	r24, 0x00	; 0
 270:	90 40       	sbci	r25, 0x00	; 0
 272:	e1 f7       	brne	.-8      	; 0x26c <main+0xf4>
 274:	00 c0       	rjmp	.+0      	; 0x276 <main+0xfe>
 276:	00 00       	nop
	_delay_ms(2000);
	snprintf(outs,sizeof(outs),"AT+CPISTART=\"TCP\",\"%s\",80\r\n",Domain);			//connect to thingspeak
 278:	87 e5       	ldi	r24, 0x57	; 87
 27a:	91 e0       	ldi	r25, 0x01	; 1
 27c:	9f 93       	push	r25
 27e:	8f 93       	push	r24
 280:	8a e6       	ldi	r24, 0x6A	; 106
 282:	91 e0       	ldi	r25, 0x01	; 1
 284:	9f 93       	push	r25
 286:	8f 93       	push	r24
 288:	1f 92       	push	r1
 28a:	1f 93       	push	r17
 28c:	df 93       	push	r29
 28e:	cf 93       	push	r28
 290:	0e 94 ad 01 	call	0x35a	; 0x35a <snprintf>
	USART_tx_string(outs);
 294:	ce 01       	movw	r24, r28
 296:	0e 94 9d 00 	call	0x13a	; 0x13a <USART_tx_string>
 29a:	8f ef       	ldi	r24, 0xFF	; 255
 29c:	93 ed       	ldi	r25, 0xD3	; 211
 29e:	20 e3       	ldi	r18, 0x30	; 48
 2a0:	81 50       	subi	r24, 0x01	; 1
 2a2:	90 40       	sbci	r25, 0x00	; 0
 2a4:	20 40       	sbci	r18, 0x00	; 0
 2a6:	e1 f7       	brne	.-8      	; 0x2a0 <main+0x128>
 2a8:	00 c0       	rjmp	.+0      	; 0x2aa <main+0x132>
 2aa:	00 00       	nop
 2ac:	8d b7       	in	r24, 0x3d	; 61
 2ae:	9e b7       	in	r25, 0x3e	; 62
 2b0:	42 96       	adiw	r24, 0x12	; 18
 2b2:	0f b6       	in	r0, 0x3f	; 63
 2b4:	f8 94       	cli
 2b6:	9e bf       	out	0x3e, r25	; 62
 2b8:	0f be       	out	0x3f, r0	; 63
 2ba:	8d bf       	out	0x3d, r24	; 61
	
	
	while(1)
	{
		read_adc();
		snprintf(outs,sizeof(outs),"GET /update?api_key=%s&field1=1\r\n",API_Write_Key);		//send value
 2bc:	0f 2e       	mov	r0, r31
 2be:	f6 e8       	ldi	r31, 0x86	; 134
 2c0:	af 2e       	mov	r10, r31
 2c2:	f1 e0       	ldi	r31, 0x01	; 1
 2c4:	bf 2e       	mov	r11, r31
 2c6:	f0 2d       	mov	r31, r0
 2c8:	0f 2e       	mov	r0, r31
 2ca:	f7 e9       	ldi	r31, 0x97	; 151
 2cc:	cf 2e       	mov	r12, r31
 2ce:	f1 e0       	ldi	r31, 0x01	; 1
 2d0:	df 2e       	mov	r13, r31
 2d2:	f0 2d       	mov	r31, r0
 2d4:	0f 2e       	mov	r0, r31
 2d6:	fe e1       	ldi	r31, 0x1E	; 30
 2d8:	ff 2e       	mov	r15, r31
 2da:	f0 2d       	mov	r31, r0
		USART_tx_string(outs);
		_delay_ms(150);
		snprintf(outs,sizeof(outs),"AT+CISEND=%3d\r\n",adc_temp);
 2dc:	09 eb       	ldi	r16, 0xB9	; 185
 2de:	11 e0       	ldi	r17, 0x01	; 1

	
	
	while(1)
	{
		read_adc();
 2e0:	0e 94 5c 00 	call	0xb8	; 0xb8 <read_adc>
		snprintf(outs,sizeof(outs),"GET /update?api_key=%s&field1=1\r\n",API_Write_Key);		//send value
 2e4:	bf 92       	push	r11
 2e6:	af 92       	push	r10
 2e8:	df 92       	push	r13
 2ea:	cf 92       	push	r12
 2ec:	1f 92       	push	r1
 2ee:	ff 92       	push	r15
 2f0:	df 93       	push	r29
 2f2:	cf 93       	push	r28
 2f4:	0e 94 ad 01 	call	0x35a	; 0x35a <snprintf>
		USART_tx_string(outs);
 2f8:	ce 01       	movw	r24, r28
 2fa:	0e 94 9d 00 	call	0x13a	; 0x13a <USART_tx_string>
 2fe:	3f e7       	ldi	r19, 0x7F	; 127
 300:	89 ea       	ldi	r24, 0xA9	; 169
 302:	93 e0       	ldi	r25, 0x03	; 3
 304:	31 50       	subi	r19, 0x01	; 1
 306:	80 40       	sbci	r24, 0x00	; 0
 308:	90 40       	sbci	r25, 0x00	; 0
 30a:	e1 f7       	brne	.-8      	; 0x304 <main+0x18c>
 30c:	00 c0       	rjmp	.+0      	; 0x30e <main+0x196>
 30e:	00 00       	nop
		_delay_ms(150);
		snprintf(outs,sizeof(outs),"AT+CISEND=%3d\r\n",adc_temp);
 310:	80 91 e8 01 	lds	r24, 0x01E8	; 0x8001e8 <adc_temp>
 314:	90 91 e9 01 	lds	r25, 0x01E9	; 0x8001e9 <adc_temp+0x1>
 318:	9f 93       	push	r25
 31a:	8f 93       	push	r24
 31c:	1f 93       	push	r17
 31e:	0f 93       	push	r16
 320:	1f 92       	push	r1
 322:	ff 92       	push	r15
 324:	df 93       	push	r29
 326:	cf 93       	push	r28
 328:	0e 94 ad 01 	call	0x35a	; 0x35a <snprintf>
		USART_tx_string(outs);
 32c:	ce 01       	movw	r24, r28
 32e:	0e 94 9d 00 	call	0x13a	; 0x13a <USART_tx_string>
 332:	8f ef       	ldi	r24, 0xFF	; 255
 334:	9c e2       	ldi	r25, 0x2C	; 44
 336:	21 e3       	ldi	r18, 0x31	; 49
 338:	31 e0       	ldi	r19, 0x01	; 1
 33a:	81 50       	subi	r24, 0x01	; 1
 33c:	90 40       	sbci	r25, 0x00	; 0
 33e:	20 40       	sbci	r18, 0x00	; 0
 340:	30 40       	sbci	r19, 0x00	; 0
 342:	d9 f7       	brne	.-10     	; 0x33a <main+0x1c2>
 344:	00 c0       	rjmp	.+0      	; 0x346 <main+0x1ce>
 346:	00 00       	nop
 348:	8d b7       	in	r24, 0x3d	; 61
 34a:	9e b7       	in	r25, 0x3e	; 62
 34c:	40 96       	adiw	r24, 0x10	; 16
 34e:	0f b6       	in	r0, 0x3f	; 63
 350:	f8 94       	cli
 352:	9e bf       	out	0x3e, r25	; 62
 354:	0f be       	out	0x3f, r0	; 63
 356:	8d bf       	out	0x3d, r24	; 61
 358:	c3 cf       	rjmp	.-122    	; 0x2e0 <main+0x168>

0000035a <snprintf>:
 35a:	ae e0       	ldi	r26, 0x0E	; 14
 35c:	b0 e0       	ldi	r27, 0x00	; 0
 35e:	e3 eb       	ldi	r30, 0xB3	; 179
 360:	f1 e0       	ldi	r31, 0x01	; 1
 362:	0c 94 7c 04 	jmp	0x8f8	; 0x8f8 <__prologue_saves__+0x1c>
 366:	0d 89       	ldd	r16, Y+21	; 0x15
 368:	1e 89       	ldd	r17, Y+22	; 0x16
 36a:	8f 89       	ldd	r24, Y+23	; 0x17
 36c:	98 8d       	ldd	r25, Y+24	; 0x18
 36e:	26 e0       	ldi	r18, 0x06	; 6
 370:	2c 83       	std	Y+4, r18	; 0x04
 372:	1a 83       	std	Y+2, r17	; 0x02
 374:	09 83       	std	Y+1, r16	; 0x01
 376:	97 ff       	sbrs	r25, 7
 378:	02 c0       	rjmp	.+4      	; 0x37e <snprintf+0x24>
 37a:	80 e0       	ldi	r24, 0x00	; 0
 37c:	90 e8       	ldi	r25, 0x80	; 128
 37e:	01 97       	sbiw	r24, 0x01	; 1
 380:	9e 83       	std	Y+6, r25	; 0x06
 382:	8d 83       	std	Y+5, r24	; 0x05
 384:	ae 01       	movw	r20, r28
 386:	45 5e       	subi	r20, 0xE5	; 229
 388:	5f 4f       	sbci	r21, 0xFF	; 255
 38a:	69 8d       	ldd	r22, Y+25	; 0x19
 38c:	7a 8d       	ldd	r23, Y+26	; 0x1a
 38e:	ce 01       	movw	r24, r28
 390:	01 96       	adiw	r24, 0x01	; 1
 392:	0e 94 dd 01 	call	0x3ba	; 0x3ba <vfprintf>
 396:	4d 81       	ldd	r20, Y+5	; 0x05
 398:	5e 81       	ldd	r21, Y+6	; 0x06
 39a:	57 fd       	sbrc	r21, 7
 39c:	0a c0       	rjmp	.+20     	; 0x3b2 <snprintf+0x58>
 39e:	2f 81       	ldd	r18, Y+7	; 0x07
 3a0:	38 85       	ldd	r19, Y+8	; 0x08
 3a2:	42 17       	cp	r20, r18
 3a4:	53 07       	cpc	r21, r19
 3a6:	0c f4       	brge	.+2      	; 0x3aa <snprintf+0x50>
 3a8:	9a 01       	movw	r18, r20
 3aa:	f8 01       	movw	r30, r16
 3ac:	e2 0f       	add	r30, r18
 3ae:	f3 1f       	adc	r31, r19
 3b0:	10 82       	st	Z, r1
 3b2:	2e 96       	adiw	r28, 0x0e	; 14
 3b4:	e4 e0       	ldi	r30, 0x04	; 4
 3b6:	0c 94 98 04 	jmp	0x930	; 0x930 <__epilogue_restores__+0x1c>

000003ba <vfprintf>:
 3ba:	ab e0       	ldi	r26, 0x0B	; 11
 3bc:	b0 e0       	ldi	r27, 0x00	; 0
 3be:	e3 ee       	ldi	r30, 0xE3	; 227
 3c0:	f1 e0       	ldi	r31, 0x01	; 1
 3c2:	0c 94 6e 04 	jmp	0x8dc	; 0x8dc <__prologue_saves__>
 3c6:	6c 01       	movw	r12, r24
 3c8:	7b 01       	movw	r14, r22
 3ca:	8a 01       	movw	r16, r20
 3cc:	fc 01       	movw	r30, r24
 3ce:	17 82       	std	Z+7, r1	; 0x07
 3d0:	16 82       	std	Z+6, r1	; 0x06
 3d2:	83 81       	ldd	r24, Z+3	; 0x03
 3d4:	81 ff       	sbrs	r24, 1
 3d6:	cc c1       	rjmp	.+920    	; 0x770 <__LOCK_REGION_LENGTH__+0x370>
 3d8:	ce 01       	movw	r24, r28
 3da:	01 96       	adiw	r24, 0x01	; 1
 3dc:	3c 01       	movw	r6, r24
 3de:	f6 01       	movw	r30, r12
 3e0:	93 81       	ldd	r25, Z+3	; 0x03
 3e2:	f7 01       	movw	r30, r14
 3e4:	93 fd       	sbrc	r25, 3
 3e6:	85 91       	lpm	r24, Z+
 3e8:	93 ff       	sbrs	r25, 3
 3ea:	81 91       	ld	r24, Z+
 3ec:	7f 01       	movw	r14, r30
 3ee:	88 23       	and	r24, r24
 3f0:	09 f4       	brne	.+2      	; 0x3f4 <vfprintf+0x3a>
 3f2:	ba c1       	rjmp	.+884    	; 0x768 <__LOCK_REGION_LENGTH__+0x368>
 3f4:	85 32       	cpi	r24, 0x25	; 37
 3f6:	39 f4       	brne	.+14     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3f8:	93 fd       	sbrc	r25, 3
 3fa:	85 91       	lpm	r24, Z+
 3fc:	93 ff       	sbrs	r25, 3
 3fe:	81 91       	ld	r24, Z+
 400:	7f 01       	movw	r14, r30
 402:	85 32       	cpi	r24, 0x25	; 37
 404:	29 f4       	brne	.+10     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 406:	b6 01       	movw	r22, r12
 408:	90 e0       	ldi	r25, 0x00	; 0
 40a:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <fputc>
 40e:	e7 cf       	rjmp	.-50     	; 0x3de <vfprintf+0x24>
 410:	91 2c       	mov	r9, r1
 412:	21 2c       	mov	r2, r1
 414:	31 2c       	mov	r3, r1
 416:	ff e1       	ldi	r31, 0x1F	; 31
 418:	f3 15       	cp	r31, r3
 41a:	d8 f0       	brcs	.+54     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 41c:	8b 32       	cpi	r24, 0x2B	; 43
 41e:	79 f0       	breq	.+30     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 420:	38 f4       	brcc	.+14     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 422:	80 32       	cpi	r24, 0x20	; 32
 424:	79 f0       	breq	.+30     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 426:	83 32       	cpi	r24, 0x23	; 35
 428:	a1 f4       	brne	.+40     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 42a:	23 2d       	mov	r18, r3
 42c:	20 61       	ori	r18, 0x10	; 16
 42e:	1d c0       	rjmp	.+58     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 430:	8d 32       	cpi	r24, 0x2D	; 45
 432:	61 f0       	breq	.+24     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 434:	80 33       	cpi	r24, 0x30	; 48
 436:	69 f4       	brne	.+26     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 438:	23 2d       	mov	r18, r3
 43a:	21 60       	ori	r18, 0x01	; 1
 43c:	16 c0       	rjmp	.+44     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 43e:	83 2d       	mov	r24, r3
 440:	82 60       	ori	r24, 0x02	; 2
 442:	38 2e       	mov	r3, r24
 444:	e3 2d       	mov	r30, r3
 446:	e4 60       	ori	r30, 0x04	; 4
 448:	3e 2e       	mov	r3, r30
 44a:	2a c0       	rjmp	.+84     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 44c:	f3 2d       	mov	r31, r3
 44e:	f8 60       	ori	r31, 0x08	; 8
 450:	1d c0       	rjmp	.+58     	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 452:	37 fc       	sbrc	r3, 7
 454:	2d c0       	rjmp	.+90     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 456:	20 ed       	ldi	r18, 0xD0	; 208
 458:	28 0f       	add	r18, r24
 45a:	2a 30       	cpi	r18, 0x0A	; 10
 45c:	40 f0       	brcs	.+16     	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 45e:	8e 32       	cpi	r24, 0x2E	; 46
 460:	b9 f4       	brne	.+46     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 462:	36 fc       	sbrc	r3, 6
 464:	81 c1       	rjmp	.+770    	; 0x768 <__LOCK_REGION_LENGTH__+0x368>
 466:	23 2d       	mov	r18, r3
 468:	20 64       	ori	r18, 0x40	; 64
 46a:	32 2e       	mov	r3, r18
 46c:	19 c0       	rjmp	.+50     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 46e:	36 fe       	sbrs	r3, 6
 470:	06 c0       	rjmp	.+12     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 472:	8a e0       	ldi	r24, 0x0A	; 10
 474:	98 9e       	mul	r9, r24
 476:	20 0d       	add	r18, r0
 478:	11 24       	eor	r1, r1
 47a:	92 2e       	mov	r9, r18
 47c:	11 c0       	rjmp	.+34     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 47e:	ea e0       	ldi	r30, 0x0A	; 10
 480:	2e 9e       	mul	r2, r30
 482:	20 0d       	add	r18, r0
 484:	11 24       	eor	r1, r1
 486:	22 2e       	mov	r2, r18
 488:	f3 2d       	mov	r31, r3
 48a:	f0 62       	ori	r31, 0x20	; 32
 48c:	3f 2e       	mov	r3, r31
 48e:	08 c0       	rjmp	.+16     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 490:	8c 36       	cpi	r24, 0x6C	; 108
 492:	21 f4       	brne	.+8      	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 494:	83 2d       	mov	r24, r3
 496:	80 68       	ori	r24, 0x80	; 128
 498:	38 2e       	mov	r3, r24
 49a:	02 c0       	rjmp	.+4      	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 49c:	88 36       	cpi	r24, 0x68	; 104
 49e:	41 f4       	brne	.+16     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 4a0:	f7 01       	movw	r30, r14
 4a2:	93 fd       	sbrc	r25, 3
 4a4:	85 91       	lpm	r24, Z+
 4a6:	93 ff       	sbrs	r25, 3
 4a8:	81 91       	ld	r24, Z+
 4aa:	7f 01       	movw	r14, r30
 4ac:	81 11       	cpse	r24, r1
 4ae:	b3 cf       	rjmp	.-154    	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 4b0:	98 2f       	mov	r25, r24
 4b2:	9f 7d       	andi	r25, 0xDF	; 223
 4b4:	95 54       	subi	r25, 0x45	; 69
 4b6:	93 30       	cpi	r25, 0x03	; 3
 4b8:	28 f4       	brcc	.+10     	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4ba:	0c 5f       	subi	r16, 0xFC	; 252
 4bc:	1f 4f       	sbci	r17, 0xFF	; 255
 4be:	9f e3       	ldi	r25, 0x3F	; 63
 4c0:	99 83       	std	Y+1, r25	; 0x01
 4c2:	0d c0       	rjmp	.+26     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4c4:	83 36       	cpi	r24, 0x63	; 99
 4c6:	31 f0       	breq	.+12     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4c8:	83 37       	cpi	r24, 0x73	; 115
 4ca:	71 f0       	breq	.+28     	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4cc:	83 35       	cpi	r24, 0x53	; 83
 4ce:	09 f0       	breq	.+2      	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
 4d0:	59 c0       	rjmp	.+178    	; 0x584 <__LOCK_REGION_LENGTH__+0x184>
 4d2:	21 c0       	rjmp	.+66     	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 4d4:	f8 01       	movw	r30, r16
 4d6:	80 81       	ld	r24, Z
 4d8:	89 83       	std	Y+1, r24	; 0x01
 4da:	0e 5f       	subi	r16, 0xFE	; 254
 4dc:	1f 4f       	sbci	r17, 0xFF	; 255
 4de:	88 24       	eor	r8, r8
 4e0:	83 94       	inc	r8
 4e2:	91 2c       	mov	r9, r1
 4e4:	53 01       	movw	r10, r6
 4e6:	13 c0       	rjmp	.+38     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 4e8:	28 01       	movw	r4, r16
 4ea:	f2 e0       	ldi	r31, 0x02	; 2
 4ec:	4f 0e       	add	r4, r31
 4ee:	51 1c       	adc	r5, r1
 4f0:	f8 01       	movw	r30, r16
 4f2:	a0 80       	ld	r10, Z
 4f4:	b1 80       	ldd	r11, Z+1	; 0x01
 4f6:	36 fe       	sbrs	r3, 6
 4f8:	03 c0       	rjmp	.+6      	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4fa:	69 2d       	mov	r22, r9
 4fc:	70 e0       	ldi	r23, 0x00	; 0
 4fe:	02 c0       	rjmp	.+4      	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 500:	6f ef       	ldi	r22, 0xFF	; 255
 502:	7f ef       	ldi	r23, 0xFF	; 255
 504:	c5 01       	movw	r24, r10
 506:	0e 94 c9 03 	call	0x792	; 0x792 <strnlen>
 50a:	4c 01       	movw	r8, r24
 50c:	82 01       	movw	r16, r4
 50e:	f3 2d       	mov	r31, r3
 510:	ff 77       	andi	r31, 0x7F	; 127
 512:	3f 2e       	mov	r3, r31
 514:	16 c0       	rjmp	.+44     	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 516:	28 01       	movw	r4, r16
 518:	22 e0       	ldi	r18, 0x02	; 2
 51a:	42 0e       	add	r4, r18
 51c:	51 1c       	adc	r5, r1
 51e:	f8 01       	movw	r30, r16
 520:	a0 80       	ld	r10, Z
 522:	b1 80       	ldd	r11, Z+1	; 0x01
 524:	36 fe       	sbrs	r3, 6
 526:	03 c0       	rjmp	.+6      	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 528:	69 2d       	mov	r22, r9
 52a:	70 e0       	ldi	r23, 0x00	; 0
 52c:	02 c0       	rjmp	.+4      	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 52e:	6f ef       	ldi	r22, 0xFF	; 255
 530:	7f ef       	ldi	r23, 0xFF	; 255
 532:	c5 01       	movw	r24, r10
 534:	0e 94 be 03 	call	0x77c	; 0x77c <strnlen_P>
 538:	4c 01       	movw	r8, r24
 53a:	f3 2d       	mov	r31, r3
 53c:	f0 68       	ori	r31, 0x80	; 128
 53e:	3f 2e       	mov	r3, r31
 540:	82 01       	movw	r16, r4
 542:	33 fc       	sbrc	r3, 3
 544:	1b c0       	rjmp	.+54     	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 546:	82 2d       	mov	r24, r2
 548:	90 e0       	ldi	r25, 0x00	; 0
 54a:	88 16       	cp	r8, r24
 54c:	99 06       	cpc	r9, r25
 54e:	b0 f4       	brcc	.+44     	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 550:	b6 01       	movw	r22, r12
 552:	80 e2       	ldi	r24, 0x20	; 32
 554:	90 e0       	ldi	r25, 0x00	; 0
 556:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <fputc>
 55a:	2a 94       	dec	r2
 55c:	f4 cf       	rjmp	.-24     	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 55e:	f5 01       	movw	r30, r10
 560:	37 fc       	sbrc	r3, 7
 562:	85 91       	lpm	r24, Z+
 564:	37 fe       	sbrs	r3, 7
 566:	81 91       	ld	r24, Z+
 568:	5f 01       	movw	r10, r30
 56a:	b6 01       	movw	r22, r12
 56c:	90 e0       	ldi	r25, 0x00	; 0
 56e:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <fputc>
 572:	21 10       	cpse	r2, r1
 574:	2a 94       	dec	r2
 576:	21 e0       	ldi	r18, 0x01	; 1
 578:	82 1a       	sub	r8, r18
 57a:	91 08       	sbc	r9, r1
 57c:	81 14       	cp	r8, r1
 57e:	91 04       	cpc	r9, r1
 580:	71 f7       	brne	.-36     	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 582:	e8 c0       	rjmp	.+464    	; 0x754 <__LOCK_REGION_LENGTH__+0x354>
 584:	84 36       	cpi	r24, 0x64	; 100
 586:	11 f0       	breq	.+4      	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 588:	89 36       	cpi	r24, 0x69	; 105
 58a:	41 f5       	brne	.+80     	; 0x5dc <__LOCK_REGION_LENGTH__+0x1dc>
 58c:	f8 01       	movw	r30, r16
 58e:	37 fe       	sbrs	r3, 7
 590:	07 c0       	rjmp	.+14     	; 0x5a0 <__LOCK_REGION_LENGTH__+0x1a0>
 592:	60 81       	ld	r22, Z
 594:	71 81       	ldd	r23, Z+1	; 0x01
 596:	82 81       	ldd	r24, Z+2	; 0x02
 598:	93 81       	ldd	r25, Z+3	; 0x03
 59a:	0c 5f       	subi	r16, 0xFC	; 252
 59c:	1f 4f       	sbci	r17, 0xFF	; 255
 59e:	08 c0       	rjmp	.+16     	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 5a0:	60 81       	ld	r22, Z
 5a2:	71 81       	ldd	r23, Z+1	; 0x01
 5a4:	07 2e       	mov	r0, r23
 5a6:	00 0c       	add	r0, r0
 5a8:	88 0b       	sbc	r24, r24
 5aa:	99 0b       	sbc	r25, r25
 5ac:	0e 5f       	subi	r16, 0xFE	; 254
 5ae:	1f 4f       	sbci	r17, 0xFF	; 255
 5b0:	f3 2d       	mov	r31, r3
 5b2:	ff 76       	andi	r31, 0x6F	; 111
 5b4:	3f 2e       	mov	r3, r31
 5b6:	97 ff       	sbrs	r25, 7
 5b8:	09 c0       	rjmp	.+18     	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
 5ba:	90 95       	com	r25
 5bc:	80 95       	com	r24
 5be:	70 95       	com	r23
 5c0:	61 95       	neg	r22
 5c2:	7f 4f       	sbci	r23, 0xFF	; 255
 5c4:	8f 4f       	sbci	r24, 0xFF	; 255
 5c6:	9f 4f       	sbci	r25, 0xFF	; 255
 5c8:	f0 68       	ori	r31, 0x80	; 128
 5ca:	3f 2e       	mov	r3, r31
 5cc:	2a e0       	ldi	r18, 0x0A	; 10
 5ce:	30 e0       	ldi	r19, 0x00	; 0
 5d0:	a3 01       	movw	r20, r6
 5d2:	0e 94 10 04 	call	0x820	; 0x820 <__ultoa_invert>
 5d6:	88 2e       	mov	r8, r24
 5d8:	86 18       	sub	r8, r6
 5da:	45 c0       	rjmp	.+138    	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 5dc:	85 37       	cpi	r24, 0x75	; 117
 5de:	31 f4       	brne	.+12     	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 5e0:	23 2d       	mov	r18, r3
 5e2:	2f 7e       	andi	r18, 0xEF	; 239
 5e4:	b2 2e       	mov	r11, r18
 5e6:	2a e0       	ldi	r18, 0x0A	; 10
 5e8:	30 e0       	ldi	r19, 0x00	; 0
 5ea:	25 c0       	rjmp	.+74     	; 0x636 <__LOCK_REGION_LENGTH__+0x236>
 5ec:	93 2d       	mov	r25, r3
 5ee:	99 7f       	andi	r25, 0xF9	; 249
 5f0:	b9 2e       	mov	r11, r25
 5f2:	8f 36       	cpi	r24, 0x6F	; 111
 5f4:	c1 f0       	breq	.+48     	; 0x626 <__LOCK_REGION_LENGTH__+0x226>
 5f6:	18 f4       	brcc	.+6      	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 5f8:	88 35       	cpi	r24, 0x58	; 88
 5fa:	79 f0       	breq	.+30     	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
 5fc:	b5 c0       	rjmp	.+362    	; 0x768 <__LOCK_REGION_LENGTH__+0x368>
 5fe:	80 37       	cpi	r24, 0x70	; 112
 600:	19 f0       	breq	.+6      	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 602:	88 37       	cpi	r24, 0x78	; 120
 604:	21 f0       	breq	.+8      	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 606:	b0 c0       	rjmp	.+352    	; 0x768 <__LOCK_REGION_LENGTH__+0x368>
 608:	e9 2f       	mov	r30, r25
 60a:	e0 61       	ori	r30, 0x10	; 16
 60c:	be 2e       	mov	r11, r30
 60e:	b4 fe       	sbrs	r11, 4
 610:	0d c0       	rjmp	.+26     	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
 612:	fb 2d       	mov	r31, r11
 614:	f4 60       	ori	r31, 0x04	; 4
 616:	bf 2e       	mov	r11, r31
 618:	09 c0       	rjmp	.+18     	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
 61a:	34 fe       	sbrs	r3, 4
 61c:	0a c0       	rjmp	.+20     	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 61e:	29 2f       	mov	r18, r25
 620:	26 60       	ori	r18, 0x06	; 6
 622:	b2 2e       	mov	r11, r18
 624:	06 c0       	rjmp	.+12     	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 626:	28 e0       	ldi	r18, 0x08	; 8
 628:	30 e0       	ldi	r19, 0x00	; 0
 62a:	05 c0       	rjmp	.+10     	; 0x636 <__LOCK_REGION_LENGTH__+0x236>
 62c:	20 e1       	ldi	r18, 0x10	; 16
 62e:	30 e0       	ldi	r19, 0x00	; 0
 630:	02 c0       	rjmp	.+4      	; 0x636 <__LOCK_REGION_LENGTH__+0x236>
 632:	20 e1       	ldi	r18, 0x10	; 16
 634:	32 e0       	ldi	r19, 0x02	; 2
 636:	f8 01       	movw	r30, r16
 638:	b7 fe       	sbrs	r11, 7
 63a:	07 c0       	rjmp	.+14     	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
 63c:	60 81       	ld	r22, Z
 63e:	71 81       	ldd	r23, Z+1	; 0x01
 640:	82 81       	ldd	r24, Z+2	; 0x02
 642:	93 81       	ldd	r25, Z+3	; 0x03
 644:	0c 5f       	subi	r16, 0xFC	; 252
 646:	1f 4f       	sbci	r17, 0xFF	; 255
 648:	06 c0       	rjmp	.+12     	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
 64a:	60 81       	ld	r22, Z
 64c:	71 81       	ldd	r23, Z+1	; 0x01
 64e:	80 e0       	ldi	r24, 0x00	; 0
 650:	90 e0       	ldi	r25, 0x00	; 0
 652:	0e 5f       	subi	r16, 0xFE	; 254
 654:	1f 4f       	sbci	r17, 0xFF	; 255
 656:	a3 01       	movw	r20, r6
 658:	0e 94 10 04 	call	0x820	; 0x820 <__ultoa_invert>
 65c:	88 2e       	mov	r8, r24
 65e:	86 18       	sub	r8, r6
 660:	fb 2d       	mov	r31, r11
 662:	ff 77       	andi	r31, 0x7F	; 127
 664:	3f 2e       	mov	r3, r31
 666:	36 fe       	sbrs	r3, 6
 668:	0d c0       	rjmp	.+26     	; 0x684 <__LOCK_REGION_LENGTH__+0x284>
 66a:	23 2d       	mov	r18, r3
 66c:	2e 7f       	andi	r18, 0xFE	; 254
 66e:	a2 2e       	mov	r10, r18
 670:	89 14       	cp	r8, r9
 672:	58 f4       	brcc	.+22     	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 674:	34 fe       	sbrs	r3, 4
 676:	0b c0       	rjmp	.+22     	; 0x68e <__LOCK_REGION_LENGTH__+0x28e>
 678:	32 fc       	sbrc	r3, 2
 67a:	09 c0       	rjmp	.+18     	; 0x68e <__LOCK_REGION_LENGTH__+0x28e>
 67c:	83 2d       	mov	r24, r3
 67e:	8e 7e       	andi	r24, 0xEE	; 238
 680:	a8 2e       	mov	r10, r24
 682:	05 c0       	rjmp	.+10     	; 0x68e <__LOCK_REGION_LENGTH__+0x28e>
 684:	b8 2c       	mov	r11, r8
 686:	a3 2c       	mov	r10, r3
 688:	03 c0       	rjmp	.+6      	; 0x690 <__LOCK_REGION_LENGTH__+0x290>
 68a:	b8 2c       	mov	r11, r8
 68c:	01 c0       	rjmp	.+2      	; 0x690 <__LOCK_REGION_LENGTH__+0x290>
 68e:	b9 2c       	mov	r11, r9
 690:	a4 fe       	sbrs	r10, 4
 692:	0f c0       	rjmp	.+30     	; 0x6b2 <__LOCK_REGION_LENGTH__+0x2b2>
 694:	fe 01       	movw	r30, r28
 696:	e8 0d       	add	r30, r8
 698:	f1 1d       	adc	r31, r1
 69a:	80 81       	ld	r24, Z
 69c:	80 33       	cpi	r24, 0x30	; 48
 69e:	21 f4       	brne	.+8      	; 0x6a8 <__LOCK_REGION_LENGTH__+0x2a8>
 6a0:	9a 2d       	mov	r25, r10
 6a2:	99 7e       	andi	r25, 0xE9	; 233
 6a4:	a9 2e       	mov	r10, r25
 6a6:	09 c0       	rjmp	.+18     	; 0x6ba <__LOCK_REGION_LENGTH__+0x2ba>
 6a8:	a2 fe       	sbrs	r10, 2
 6aa:	06 c0       	rjmp	.+12     	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
 6ac:	b3 94       	inc	r11
 6ae:	b3 94       	inc	r11
 6b0:	04 c0       	rjmp	.+8      	; 0x6ba <__LOCK_REGION_LENGTH__+0x2ba>
 6b2:	8a 2d       	mov	r24, r10
 6b4:	86 78       	andi	r24, 0x86	; 134
 6b6:	09 f0       	breq	.+2      	; 0x6ba <__LOCK_REGION_LENGTH__+0x2ba>
 6b8:	b3 94       	inc	r11
 6ba:	a3 fc       	sbrc	r10, 3
 6bc:	11 c0       	rjmp	.+34     	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
 6be:	a0 fe       	sbrs	r10, 0
 6c0:	06 c0       	rjmp	.+12     	; 0x6ce <__LOCK_REGION_LENGTH__+0x2ce>
 6c2:	b2 14       	cp	r11, r2
 6c4:	88 f4       	brcc	.+34     	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
 6c6:	28 0c       	add	r2, r8
 6c8:	92 2c       	mov	r9, r2
 6ca:	9b 18       	sub	r9, r11
 6cc:	0e c0       	rjmp	.+28     	; 0x6ea <__LOCK_REGION_LENGTH__+0x2ea>
 6ce:	b2 14       	cp	r11, r2
 6d0:	60 f4       	brcc	.+24     	; 0x6ea <__LOCK_REGION_LENGTH__+0x2ea>
 6d2:	b6 01       	movw	r22, r12
 6d4:	80 e2       	ldi	r24, 0x20	; 32
 6d6:	90 e0       	ldi	r25, 0x00	; 0
 6d8:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <fputc>
 6dc:	b3 94       	inc	r11
 6de:	f7 cf       	rjmp	.-18     	; 0x6ce <__LOCK_REGION_LENGTH__+0x2ce>
 6e0:	b2 14       	cp	r11, r2
 6e2:	18 f4       	brcc	.+6      	; 0x6ea <__LOCK_REGION_LENGTH__+0x2ea>
 6e4:	2b 18       	sub	r2, r11
 6e6:	02 c0       	rjmp	.+4      	; 0x6ec <__LOCK_REGION_LENGTH__+0x2ec>
 6e8:	98 2c       	mov	r9, r8
 6ea:	21 2c       	mov	r2, r1
 6ec:	a4 fe       	sbrs	r10, 4
 6ee:	10 c0       	rjmp	.+32     	; 0x710 <__LOCK_REGION_LENGTH__+0x310>
 6f0:	b6 01       	movw	r22, r12
 6f2:	80 e3       	ldi	r24, 0x30	; 48
 6f4:	90 e0       	ldi	r25, 0x00	; 0
 6f6:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <fputc>
 6fa:	a2 fe       	sbrs	r10, 2
 6fc:	17 c0       	rjmp	.+46     	; 0x72c <__LOCK_REGION_LENGTH__+0x32c>
 6fe:	a1 fc       	sbrc	r10, 1
 700:	03 c0       	rjmp	.+6      	; 0x708 <__LOCK_REGION_LENGTH__+0x308>
 702:	88 e7       	ldi	r24, 0x78	; 120
 704:	90 e0       	ldi	r25, 0x00	; 0
 706:	02 c0       	rjmp	.+4      	; 0x70c <__LOCK_REGION_LENGTH__+0x30c>
 708:	88 e5       	ldi	r24, 0x58	; 88
 70a:	90 e0       	ldi	r25, 0x00	; 0
 70c:	b6 01       	movw	r22, r12
 70e:	0c c0       	rjmp	.+24     	; 0x728 <__LOCK_REGION_LENGTH__+0x328>
 710:	8a 2d       	mov	r24, r10
 712:	86 78       	andi	r24, 0x86	; 134
 714:	59 f0       	breq	.+22     	; 0x72c <__LOCK_REGION_LENGTH__+0x32c>
 716:	a1 fe       	sbrs	r10, 1
 718:	02 c0       	rjmp	.+4      	; 0x71e <__LOCK_REGION_LENGTH__+0x31e>
 71a:	8b e2       	ldi	r24, 0x2B	; 43
 71c:	01 c0       	rjmp	.+2      	; 0x720 <__LOCK_REGION_LENGTH__+0x320>
 71e:	80 e2       	ldi	r24, 0x20	; 32
 720:	a7 fc       	sbrc	r10, 7
 722:	8d e2       	ldi	r24, 0x2D	; 45
 724:	b6 01       	movw	r22, r12
 726:	90 e0       	ldi	r25, 0x00	; 0
 728:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <fputc>
 72c:	89 14       	cp	r8, r9
 72e:	38 f4       	brcc	.+14     	; 0x73e <__LOCK_REGION_LENGTH__+0x33e>
 730:	b6 01       	movw	r22, r12
 732:	80 e3       	ldi	r24, 0x30	; 48
 734:	90 e0       	ldi	r25, 0x00	; 0
 736:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <fputc>
 73a:	9a 94       	dec	r9
 73c:	f7 cf       	rjmp	.-18     	; 0x72c <__LOCK_REGION_LENGTH__+0x32c>
 73e:	8a 94       	dec	r8
 740:	f3 01       	movw	r30, r6
 742:	e8 0d       	add	r30, r8
 744:	f1 1d       	adc	r31, r1
 746:	80 81       	ld	r24, Z
 748:	b6 01       	movw	r22, r12
 74a:	90 e0       	ldi	r25, 0x00	; 0
 74c:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <fputc>
 750:	81 10       	cpse	r8, r1
 752:	f5 cf       	rjmp	.-22     	; 0x73e <__LOCK_REGION_LENGTH__+0x33e>
 754:	22 20       	and	r2, r2
 756:	09 f4       	brne	.+2      	; 0x75a <__LOCK_REGION_LENGTH__+0x35a>
 758:	42 ce       	rjmp	.-892    	; 0x3de <vfprintf+0x24>
 75a:	b6 01       	movw	r22, r12
 75c:	80 e2       	ldi	r24, 0x20	; 32
 75e:	90 e0       	ldi	r25, 0x00	; 0
 760:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <fputc>
 764:	2a 94       	dec	r2
 766:	f6 cf       	rjmp	.-20     	; 0x754 <__LOCK_REGION_LENGTH__+0x354>
 768:	f6 01       	movw	r30, r12
 76a:	86 81       	ldd	r24, Z+6	; 0x06
 76c:	97 81       	ldd	r25, Z+7	; 0x07
 76e:	02 c0       	rjmp	.+4      	; 0x774 <__LOCK_REGION_LENGTH__+0x374>
 770:	8f ef       	ldi	r24, 0xFF	; 255
 772:	9f ef       	ldi	r25, 0xFF	; 255
 774:	2b 96       	adiw	r28, 0x0b	; 11
 776:	e2 e1       	ldi	r30, 0x12	; 18
 778:	0c 94 8a 04 	jmp	0x914	; 0x914 <__epilogue_restores__>

0000077c <strnlen_P>:
 77c:	fc 01       	movw	r30, r24
 77e:	05 90       	lpm	r0, Z+
 780:	61 50       	subi	r22, 0x01	; 1
 782:	70 40       	sbci	r23, 0x00	; 0
 784:	01 10       	cpse	r0, r1
 786:	d8 f7       	brcc	.-10     	; 0x77e <strnlen_P+0x2>
 788:	80 95       	com	r24
 78a:	90 95       	com	r25
 78c:	8e 0f       	add	r24, r30
 78e:	9f 1f       	adc	r25, r31
 790:	08 95       	ret

00000792 <strnlen>:
 792:	fc 01       	movw	r30, r24
 794:	61 50       	subi	r22, 0x01	; 1
 796:	70 40       	sbci	r23, 0x00	; 0
 798:	01 90       	ld	r0, Z+
 79a:	01 10       	cpse	r0, r1
 79c:	d8 f7       	brcc	.-10     	; 0x794 <strnlen+0x2>
 79e:	80 95       	com	r24
 7a0:	90 95       	com	r25
 7a2:	8e 0f       	add	r24, r30
 7a4:	9f 1f       	adc	r25, r31
 7a6:	08 95       	ret

000007a8 <fputc>:
 7a8:	0f 93       	push	r16
 7aa:	1f 93       	push	r17
 7ac:	cf 93       	push	r28
 7ae:	df 93       	push	r29
 7b0:	fb 01       	movw	r30, r22
 7b2:	23 81       	ldd	r18, Z+3	; 0x03
 7b4:	21 fd       	sbrc	r18, 1
 7b6:	03 c0       	rjmp	.+6      	; 0x7be <fputc+0x16>
 7b8:	8f ef       	ldi	r24, 0xFF	; 255
 7ba:	9f ef       	ldi	r25, 0xFF	; 255
 7bc:	2c c0       	rjmp	.+88     	; 0x816 <fputc+0x6e>
 7be:	22 ff       	sbrs	r18, 2
 7c0:	16 c0       	rjmp	.+44     	; 0x7ee <fputc+0x46>
 7c2:	46 81       	ldd	r20, Z+6	; 0x06
 7c4:	57 81       	ldd	r21, Z+7	; 0x07
 7c6:	24 81       	ldd	r18, Z+4	; 0x04
 7c8:	35 81       	ldd	r19, Z+5	; 0x05
 7ca:	42 17       	cp	r20, r18
 7cc:	53 07       	cpc	r21, r19
 7ce:	44 f4       	brge	.+16     	; 0x7e0 <fputc+0x38>
 7d0:	a0 81       	ld	r26, Z
 7d2:	b1 81       	ldd	r27, Z+1	; 0x01
 7d4:	9d 01       	movw	r18, r26
 7d6:	2f 5f       	subi	r18, 0xFF	; 255
 7d8:	3f 4f       	sbci	r19, 0xFF	; 255
 7da:	31 83       	std	Z+1, r19	; 0x01
 7dc:	20 83       	st	Z, r18
 7de:	8c 93       	st	X, r24
 7e0:	26 81       	ldd	r18, Z+6	; 0x06
 7e2:	37 81       	ldd	r19, Z+7	; 0x07
 7e4:	2f 5f       	subi	r18, 0xFF	; 255
 7e6:	3f 4f       	sbci	r19, 0xFF	; 255
 7e8:	37 83       	std	Z+7, r19	; 0x07
 7ea:	26 83       	std	Z+6, r18	; 0x06
 7ec:	14 c0       	rjmp	.+40     	; 0x816 <fputc+0x6e>
 7ee:	8b 01       	movw	r16, r22
 7f0:	ec 01       	movw	r28, r24
 7f2:	fb 01       	movw	r30, r22
 7f4:	00 84       	ldd	r0, Z+8	; 0x08
 7f6:	f1 85       	ldd	r31, Z+9	; 0x09
 7f8:	e0 2d       	mov	r30, r0
 7fa:	09 95       	icall
 7fc:	89 2b       	or	r24, r25
 7fe:	e1 f6       	brne	.-72     	; 0x7b8 <fputc+0x10>
 800:	d8 01       	movw	r26, r16
 802:	16 96       	adiw	r26, 0x06	; 6
 804:	8d 91       	ld	r24, X+
 806:	9c 91       	ld	r25, X
 808:	17 97       	sbiw	r26, 0x07	; 7
 80a:	01 96       	adiw	r24, 0x01	; 1
 80c:	17 96       	adiw	r26, 0x07	; 7
 80e:	9c 93       	st	X, r25
 810:	8e 93       	st	-X, r24
 812:	16 97       	sbiw	r26, 0x06	; 6
 814:	ce 01       	movw	r24, r28
 816:	df 91       	pop	r29
 818:	cf 91       	pop	r28
 81a:	1f 91       	pop	r17
 81c:	0f 91       	pop	r16
 81e:	08 95       	ret

00000820 <__ultoa_invert>:
 820:	fa 01       	movw	r30, r20
 822:	aa 27       	eor	r26, r26
 824:	28 30       	cpi	r18, 0x08	; 8
 826:	51 f1       	breq	.+84     	; 0x87c <__ultoa_invert+0x5c>
 828:	20 31       	cpi	r18, 0x10	; 16
 82a:	81 f1       	breq	.+96     	; 0x88c <__ultoa_invert+0x6c>
 82c:	e8 94       	clt
 82e:	6f 93       	push	r22
 830:	6e 7f       	andi	r22, 0xFE	; 254
 832:	6e 5f       	subi	r22, 0xFE	; 254
 834:	7f 4f       	sbci	r23, 0xFF	; 255
 836:	8f 4f       	sbci	r24, 0xFF	; 255
 838:	9f 4f       	sbci	r25, 0xFF	; 255
 83a:	af 4f       	sbci	r26, 0xFF	; 255
 83c:	b1 e0       	ldi	r27, 0x01	; 1
 83e:	3e d0       	rcall	.+124    	; 0x8bc <__ultoa_invert+0x9c>
 840:	b4 e0       	ldi	r27, 0x04	; 4
 842:	3c d0       	rcall	.+120    	; 0x8bc <__ultoa_invert+0x9c>
 844:	67 0f       	add	r22, r23
 846:	78 1f       	adc	r23, r24
 848:	89 1f       	adc	r24, r25
 84a:	9a 1f       	adc	r25, r26
 84c:	a1 1d       	adc	r26, r1
 84e:	68 0f       	add	r22, r24
 850:	79 1f       	adc	r23, r25
 852:	8a 1f       	adc	r24, r26
 854:	91 1d       	adc	r25, r1
 856:	a1 1d       	adc	r26, r1
 858:	6a 0f       	add	r22, r26
 85a:	71 1d       	adc	r23, r1
 85c:	81 1d       	adc	r24, r1
 85e:	91 1d       	adc	r25, r1
 860:	a1 1d       	adc	r26, r1
 862:	20 d0       	rcall	.+64     	; 0x8a4 <__ultoa_invert+0x84>
 864:	09 f4       	brne	.+2      	; 0x868 <__ultoa_invert+0x48>
 866:	68 94       	set
 868:	3f 91       	pop	r19
 86a:	2a e0       	ldi	r18, 0x0A	; 10
 86c:	26 9f       	mul	r18, r22
 86e:	11 24       	eor	r1, r1
 870:	30 19       	sub	r19, r0
 872:	30 5d       	subi	r19, 0xD0	; 208
 874:	31 93       	st	Z+, r19
 876:	de f6       	brtc	.-74     	; 0x82e <__ultoa_invert+0xe>
 878:	cf 01       	movw	r24, r30
 87a:	08 95       	ret
 87c:	46 2f       	mov	r20, r22
 87e:	47 70       	andi	r20, 0x07	; 7
 880:	40 5d       	subi	r20, 0xD0	; 208
 882:	41 93       	st	Z+, r20
 884:	b3 e0       	ldi	r27, 0x03	; 3
 886:	0f d0       	rcall	.+30     	; 0x8a6 <__ultoa_invert+0x86>
 888:	c9 f7       	brne	.-14     	; 0x87c <__ultoa_invert+0x5c>
 88a:	f6 cf       	rjmp	.-20     	; 0x878 <__ultoa_invert+0x58>
 88c:	46 2f       	mov	r20, r22
 88e:	4f 70       	andi	r20, 0x0F	; 15
 890:	40 5d       	subi	r20, 0xD0	; 208
 892:	4a 33       	cpi	r20, 0x3A	; 58
 894:	18 f0       	brcs	.+6      	; 0x89c <__ultoa_invert+0x7c>
 896:	49 5d       	subi	r20, 0xD9	; 217
 898:	31 fd       	sbrc	r19, 1
 89a:	40 52       	subi	r20, 0x20	; 32
 89c:	41 93       	st	Z+, r20
 89e:	02 d0       	rcall	.+4      	; 0x8a4 <__ultoa_invert+0x84>
 8a0:	a9 f7       	brne	.-22     	; 0x88c <__ultoa_invert+0x6c>
 8a2:	ea cf       	rjmp	.-44     	; 0x878 <__ultoa_invert+0x58>
 8a4:	b4 e0       	ldi	r27, 0x04	; 4
 8a6:	a6 95       	lsr	r26
 8a8:	97 95       	ror	r25
 8aa:	87 95       	ror	r24
 8ac:	77 95       	ror	r23
 8ae:	67 95       	ror	r22
 8b0:	ba 95       	dec	r27
 8b2:	c9 f7       	brne	.-14     	; 0x8a6 <__ultoa_invert+0x86>
 8b4:	00 97       	sbiw	r24, 0x00	; 0
 8b6:	61 05       	cpc	r22, r1
 8b8:	71 05       	cpc	r23, r1
 8ba:	08 95       	ret
 8bc:	9b 01       	movw	r18, r22
 8be:	ac 01       	movw	r20, r24
 8c0:	0a 2e       	mov	r0, r26
 8c2:	06 94       	lsr	r0
 8c4:	57 95       	ror	r21
 8c6:	47 95       	ror	r20
 8c8:	37 95       	ror	r19
 8ca:	27 95       	ror	r18
 8cc:	ba 95       	dec	r27
 8ce:	c9 f7       	brne	.-14     	; 0x8c2 <__ultoa_invert+0xa2>
 8d0:	62 0f       	add	r22, r18
 8d2:	73 1f       	adc	r23, r19
 8d4:	84 1f       	adc	r24, r20
 8d6:	95 1f       	adc	r25, r21
 8d8:	a0 1d       	adc	r26, r0
 8da:	08 95       	ret

000008dc <__prologue_saves__>:
 8dc:	2f 92       	push	r2
 8de:	3f 92       	push	r3
 8e0:	4f 92       	push	r4
 8e2:	5f 92       	push	r5
 8e4:	6f 92       	push	r6
 8e6:	7f 92       	push	r7
 8e8:	8f 92       	push	r8
 8ea:	9f 92       	push	r9
 8ec:	af 92       	push	r10
 8ee:	bf 92       	push	r11
 8f0:	cf 92       	push	r12
 8f2:	df 92       	push	r13
 8f4:	ef 92       	push	r14
 8f6:	ff 92       	push	r15
 8f8:	0f 93       	push	r16
 8fa:	1f 93       	push	r17
 8fc:	cf 93       	push	r28
 8fe:	df 93       	push	r29
 900:	cd b7       	in	r28, 0x3d	; 61
 902:	de b7       	in	r29, 0x3e	; 62
 904:	ca 1b       	sub	r28, r26
 906:	db 0b       	sbc	r29, r27
 908:	0f b6       	in	r0, 0x3f	; 63
 90a:	f8 94       	cli
 90c:	de bf       	out	0x3e, r29	; 62
 90e:	0f be       	out	0x3f, r0	; 63
 910:	cd bf       	out	0x3d, r28	; 61
 912:	09 94       	ijmp

00000914 <__epilogue_restores__>:
 914:	2a 88       	ldd	r2, Y+18	; 0x12
 916:	39 88       	ldd	r3, Y+17	; 0x11
 918:	48 88       	ldd	r4, Y+16	; 0x10
 91a:	5f 84       	ldd	r5, Y+15	; 0x0f
 91c:	6e 84       	ldd	r6, Y+14	; 0x0e
 91e:	7d 84       	ldd	r7, Y+13	; 0x0d
 920:	8c 84       	ldd	r8, Y+12	; 0x0c
 922:	9b 84       	ldd	r9, Y+11	; 0x0b
 924:	aa 84       	ldd	r10, Y+10	; 0x0a
 926:	b9 84       	ldd	r11, Y+9	; 0x09
 928:	c8 84       	ldd	r12, Y+8	; 0x08
 92a:	df 80       	ldd	r13, Y+7	; 0x07
 92c:	ee 80       	ldd	r14, Y+6	; 0x06
 92e:	fd 80       	ldd	r15, Y+5	; 0x05
 930:	0c 81       	ldd	r16, Y+4	; 0x04
 932:	1b 81       	ldd	r17, Y+3	; 0x03
 934:	aa 81       	ldd	r26, Y+2	; 0x02
 936:	b9 81       	ldd	r27, Y+1	; 0x01
 938:	ce 0f       	add	r28, r30
 93a:	d1 1d       	adc	r29, r1
 93c:	0f b6       	in	r0, 0x3f	; 63
 93e:	f8 94       	cli
 940:	de bf       	out	0x3e, r29	; 62
 942:	0f be       	out	0x3f, r0	; 63
 944:	cd bf       	out	0x3d, r28	; 61
 946:	ed 01       	movw	r28, r26
 948:	08 95       	ret

0000094a <_exit>:
 94a:	f8 94       	cli

0000094c <__stop_program>:
 94c:	ff cf       	rjmp	.-2      	; 0x94c <__stop_program>
